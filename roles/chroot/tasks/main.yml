- name: gerar fstab
  ansible.builtin.shell:
    cmd: "genfstab -U {{ fsroot }}/etc/fstab"

- name: syncar relógio
  # adicionar um .sh para o usuário settar a região dele
  ansible.builtin.command:
    cmd: "arch-chroot {{ fsroot }} (script da região do relógio) /usr/bin/hwclock --systohc"

- name: settar locale
  #fazer um script que setta isso pro usuário (ex usuário seleciona pt_BR.UTF-8 e ele adiciona ali)
  ansible.builtin.lineinfile:
    path: "{{ fsroot }}/etc/locale.gen"
    regexp: "^#(linguagem_settada)"
    line: '\g<1>'
    backrefs: true

- name: gerar locale
  ansible.builtin.command:
    cmd: "arch-chroot {{ fsroot }} /usr/bin/locale-gen"
  changed_when: true

- name: Settar a config de locale
  #mais um .sh
  ansible.builtin.copy:
  content: "{{ (linguagem_selecionada }}"
  dest: "{{ fsroot }}/etc/locale.conf"
  mode: "644"

- name: settar nome de hosts
  #mais um .sh
  ansible.builtin.copy:
  content: "{{ hostname }}"
  dest: "{{ fsroot }}/etc/hostname"
  mode: "644"

- name: permitir o grupo wheel
  ansible.builtin.lineinfile:
    path: "{{ fsroot }}/etc/sudoers"
    regexp: '^#%wheel ALL=\(ALL:ALL\) ALL'
    line: "%wheel ALL=(ALL:ALL) ALL"

- name: instalar refind
  ansible.builtin.command:
    cmd: >
      arch-chroot {{ fsroot }}
      pacman -S refind
      refind-install

- name: Configurar refind
  # script pro e2label e pra fazer a configuracão manual do refind

- name: iniciar servicos
  changed_when: true
  ansible.builtin.command:
    cmd: "arch-chroot {{ fsroot }} /usr/bin/systemctl enable {{ item }}.service"
  loop:
    - "sshd"
    - "NetworkManager"

- name: Set root password
  changed_when: true
  ansible.builtin.command:
    cmd: "arch-chroot {{ fsroot }} /usr/bin/bash -c 'echo 'root:{{ ansible_password }}' | chpasswd'"

- name: Permitir ssh na root temporariamente
  ansible.builtin.lineinfile:
    path: "{{ fsroot }}/etc/ssh/sshd_config"
    regexp: "^#PermitRootLogin"
    line: "PermitRootLogin yes"
